<h1>首頁</h1>
<p>2020/10/12更新(課程內容)</p>
<h1>課程內容</h1>
<p>教材:Hardware Basics</p>
<p><strong><span style="color: #ff6600;">Introduction/介紹:</span></strong></p>
<p><strong><span style="color: #ff0000;">原文:</span></strong></p>
<p><span style="color: #000000;">This lesson will cover the basics of PC Hardware. First, you will learn the various parts of both desktop and laptop computers. Next, you will discover basic terms that are associated with computers, such as hardware, software, and firmware. You will learn the most basic functions of a computer: input, output, storage, and processing. Next, you will explore various input and output interfaces on the computer and the associated cables. Finally, you will review connections between common peripherals and discuss the standard ports.</span></p>
<p><strong><span style="color: #ff0000;">翻譯:</span></strong><span>本課將介紹PC硬件的基礎知識。</span><span>首先，您將學習台式計算機和便攜式計算機的各個部分。</span><span>接下來，您將發現與計算機關聯的基本術語，例如硬件，軟件和固件。</span><span>您將學習計算機的最基本功能：輸入，輸出，存儲和處理。</span><span>接下來，您將探索計算機上的各種輸入和輸出接口以及相關的電纜。</span><span>最後，您將回顧通用外設之間的連接並討論標準端口。</span></p>
<p><span></span></p>
<h3 contenteditable="true" data-element="title">計算機功能</h3>
<p><span style="color: #ff6600;"><strong>Functions of Computers(計算機功能): Input, Output, Storage, and Processing</strong></span></p>
<p><span style="color: #ff6600;"><strong><span style="color: #ff0000;">原文:</span></strong></span></p>
<p id="N1069E" lang="">Regardless of the<span> </span><a aria-describedby="N106A2" class="extra" id=""></a>form factor<span> </span>of the machine, four basic functions — input, output, storage, and processing — make a computer. Below is a display of how those functions work together.</p>
<p lang=""><span><strong><span style="color: #ff0000;">翻譯:</span></strong>不管機器的</span><a aria-describedby="N106A2" class="extra" id=""></a><span>外形尺寸</span><span>如何，<span> </span>計算機都具有四個基本功能（輸入，輸出，存儲和處理）。下面顯示了這些功能如何協同工作。</span></p>
<p><img alt="" height="152" src="/images/image2.png" width="330"/></p>
<h1>網頁來自Github</h1>
<p></p>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules<span> </span><a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<p></p>
<h2>運作原理</h2>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>